{"version":3,"sources":["./src/app/core/dashboard/dashboard.page.html","./src/app/core/dashboard/dashboard-routing.module.ts","./src/app/core/dashboard/dashboard.module.ts","./src/app/core/dashboard/dashboard.page.scss","./src/app/core/dashboard/dashboard.page.ts","./src/assets/mock/activities.ts"],"names":[],"mappings":"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","file":"core-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\" mode=\\\"ios\\\">\\n    <ion-segment-button value=\\\"A\\\">\\n      <ion-label>Appliance</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"P\\\">\\n      <ion-label>Power</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div *ngIf=\\\"segment == 'A'\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <canvas #canvasAppliance></canvas>\\n        </ion-col>\\n\\n        <ion-col>\\n          ssss\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n  \\n  <div *ngIf=\\\"segment == 'P'\\\">\\n    <canvas #canvasPower></canvas>\\n  </div>\\n\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>News Feed</h3>\\n    </ion-list-header>\\n\\n    <div [hidden]=\\\"!isFeedEmpty\\\">\\n      <img [src]=\\\"iconError\\\" class=\\\"error-img\\\">\\n      <p class=\\\"error-text\\\">No feeds loaded</p>\\n    </div>\\n    \\n    <div [hidden]=\\\"isFeedEmpty\\\">\\n      <ion-item lines=\\\"none\\\" *ngFor=\\\"let activity of activities\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"activity.appliance == 'TV'\\\" [src]=\\\"iconLCD\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Lamp'\\\" [src]=\\\"iconLamp\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Light'\\\" [src]=\\\"iconLamp1\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Fridge'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'AC'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Dishwasher'\\\" [src]=\\\"iconDishwasher\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Toaster'\\\" [src]=\\\"iconToaster\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Dryer'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Washing'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Microwave'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Air'\\\" [src]=\\\"iconAir\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Deep'\\\" [src]=\\\"iconDeep\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Blender'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Induction'\\\" [src]=\\\"iconInduction\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Iron'\\\" [src]=\\\"iconIron\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Vacuum'\\\" [src]=\\\"iconVacuum\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h2>{{activity.appliance}}</h2>\\n        </ion-label>\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-text-wrap ion-text-right\\\">\\n          <p>{{activity.created_date}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \".error-img {\\n  display: grid;\\n  max-width: 7rem !important;\\n  margin-top: 3rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.error-text {\\n  color: #9d9fa6;\\n  display: grid;\\n  font-size: 0.9rem;\\n  margin-left: 4rem;\\n  margin-right: 4rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mYXJyYWh6ZWx5bmEvRG9jdW1lbnRzL3pldXMvbW9iaWxlL3NyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1pbWcge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgbWF4LXdpZHRoOiA3cmVtICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogM3JlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4gIFxuLmVycm9yLXRleHQge1xuICAgIGNvbG9yOiAjOWQ5ZmE2O1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDRyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iLCIuZXJyb3ItaW1nIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWF4LXdpZHRoOiA3cmVtICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDNyZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5lcnJvci10ZXh0IHtcbiAgY29sb3I6ICM5ZDlmYTY7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Activity } from 'src/assets/mock/activities';\nimport { Router } from '@angular/router';\nimport { Chart } from \"chart.js\";\nimport { DevicesService } from 'src/app/shared/services/devices/devices.service';\nimport { interval } from 'rxjs';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  // Data\n  activities = []\n\n  notiActivities = []\n\n  dataKiri: number = 0\n  dataKanan: number = 0\n\n  // Segment\n  segment: string\n\n  // Chart\n  @ViewChild('canvasPower', {static: false}) canvasPower: ElementRef\n  @ViewChild('canvasAppliance', {static: false}) canvasAppliance: ElementRef\n  private chartPower\n  private chartAppliance\n\n  // Checker\n  isFeedEmpty: boolean = true\n\n\n  // Length\n  notifyMe: any[] = []\n\n  intervalNoti\n  intervalCSV\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconAirCond = 'assets/img/appliance/air-conditioner.svg'\n  iconDishwasher = 'assets/img/appliance/dishwasher.svg'\n  iconFridge = 'assets/img/appliance/fridge.svg'\n  iconLamp = 'assets/img/appliance/lamp.svg'\n  iconLamp1 = 'assets/img/appliance/lamp-1.svg'\n  iconLCD = 'assets/img/appliance/lcd.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n  iconDryer = 'assets/img/appliance/tumble-dryer.svg'\n  iconAir = 'assets/img/appliance/air.svg'\n  iconBlender = 'assets/img/appliance/blender.svg'\n  iconDeep = 'assets/img/appliance/deep.svg'\n  iconInduction = 'assets/img/appliance/induction.svg'\n  iconIron = 'assets/img/appliance/iron.svg'\n  iconVacuum = 'assets/img/appliance/vacuum.svg'\n\n  constructor(\n    private deviceService: DevicesService,\n    private router: Router\n  ) { \n    this.getData()\n    this.getCSV()\n  }\n\n  ngOnInit() {\n    this.segment = 'P'\n    this.intervalNoti = setInterval(\n      () => {\n        this.getNoti()\n      },\n      10000\n    )\n  }\n\n  getData() {\n    this.activities = Activity\n    if (this.activities.length == 0) {\n      this.isFeedEmpty = true\n    }\n    else {\n      this.isFeedEmpty = false\n    }\n  }\n\n  view() {\n    let path = '/appliance-detail'\n    this.router.navigate([path])\n  }\n\n  ionViewWillEnter() {\n    this.initChartPower()\n    this.initChartAppliance()\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalCSV)\n    clearInterval(this.intervalNoti)\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment: ', this.segment)\n    console.log('Segment changed: ', ev)\n    if (this.segment == 'A') {\n      setTimeout(\n        () => {\n          this.initChartAppliance()\n        }, 1000\n      )\n    }\n    if (this.segment == 'P') {\n      setTimeout(\n        () => {\n          this.initChartPower()\n        }, 1000\n      )\n    }\n  }\n\n  initChartAppliance() {\n    this.chartAppliance = new Chart(this.canvasAppliance.nativeElement, {\n      type: 'pie',\n\t\t\tdata: {\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: [\n            55,\n            120,\n            155,\n            160,\n            95\n\t\t\t\t\t],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'red',\n\t\t\t\t\t\t'orange',\n\t\t\t\t\t\t'yellow',\n\t\t\t\t\t\t'green',\n\t\t\t\t\t\t'blue',\n\t\t\t\t\t],\n\t\t\t\t\tlabel: 'Dataset 1'\n\t\t\t\t}],\n\t\t\t\tlabels: [\n\t\t\t\t\t'Lamp',\n\t\t\t\t\t'Solar',\n\t\t\t\t\t'Fridge',\n\t\t\t\t\t'Microwave',\n\t\t\t\t\t'Fan'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true\n\t\t\t}\n    })\n  }\n\n  initChartPower() {\n    this.chartPower = new Chart(this.canvasPower.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          },\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(192,75,192,0.4)\",\n            borderColor: \"rgba(192,75,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          },\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,75,0.4)\",\n            borderColor: \"rgba(75,192,75,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n\n  }\n\n  getCSV() {\n    this.deviceService.getCSV().subscribe(\n      (res) => {\n        let row = res.body.split(\",\")\n        if (res.body.length < 30) {\n          let label = moment.unix(res.test).format('h:mm:ss a')\n          let data1 = row[0]*240/1000\n          let data2 = row[1]*240/1000\n          let data3 = row[2]*240/1000\n          this.dataKiri = (this.dataKiri + data1 + data2 + data3) / 60\n          this.dataKanan = (this.dataKanan + data1 + data2 + data3) / 50\n          this.chartPower.data.labels.push(label)\n          this.chartPower.data.datasets[0].data.push(data1)\n          this.chartPower.data.datasets[1].data.push(data2)\n          this.chartPower.data.datasets[2].data.push(data3)\n          this.chartPower.update()\n        }\n        // console.log('Dashboard: ', res)\n        // this.\n        console.log()\n      }\n    )\n    // this.intervalCSV = setInterval(\n    //   () => {\n    //     this.deviceService.getCSV().subscribe(\n    //       (res) => {\n    //         let row = res.body.split(\",\")\n    //         if (res.body.length < 30) {\n    //           let label = moment.unix(res.test).format('h:mm:ss a')\n    //           let data1 = row[0]*240/1000\n    //           let data2 = row[1]*240/1000\n    //           let data3 = row[2]*240/1000\n    //           this.dataKiri = (this.dataKiri + data1 + data2 + data3) / 60\n    //           this.dataKanan = (this.dataKanan + data1 + data2 + data3) / 50\n    //           this.chartPower.data.labels.push(label)\n    //           this.chartPower.data.datasets[0].data.push(data1)\n    //           this.chartPower.data.datasets[1].data.push(data2)\n    //           this.chartPower.data.datasets[2].data.push(data3)\n    //           this.chartPower.update()\n    //         }\n    //         // console.log('Dashboard: ', res)\n    //         // this.\n    //         console.log()\n    //       }\n    //     )\n    //   }, 1000\n    // )\n  }\n\n  addData(chart, label, data) {\n\n  }\n\n\n  getNoti() {\n    this.notiActivities = []\n    this.deviceService.getValue().subscribe(\n      (res: any[]) => {\n        res = res.sort((n1,n2) => n1 - n2);\n        res.forEach(\n          (data) => {\n            data.time = moment.unix(data.time).format('h:mm:ss a')\n            this.notiActivities.push(data)\n          }\n        )\n      },\n      () => {},\n      () => {}\n    )\n  }\n\n}\n","export const Activity = [\n    {\n        appliance: 'Microwave',\n        description: 'Turned off',\n        created_date: '08:12 a.m'\n    },\n    {\n        appliance: 'Microwave',\n        description: 'On for 1 minutes',\n        created_date: '08:10 a.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:30 p.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:29 p.m'\n    }\n]"],"sourceRoot":"webpack:///"}