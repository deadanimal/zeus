{"version":3,"sources":["webpack:///src/app/core/dashboard/dashboard.page.html","webpack:///src/app/core/dashboard/dashboard-routing.module.ts","webpack:///src/app/core/dashboard/dashboard.module.ts","webpack:///src/app/core/dashboard/dashboard.page.scss","webpack:///src/app/core/dashboard/dashboard.page.ts","webpack:///src/assets/mock/activities.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","DashboardPage","router","activities","isFeedEmpty","iconError","iconMicrowave","iconToaster","getData","segment","length","navigate","initChartAppliance","initChartPower","ev","console","log","setTimeout","chartAppliance","canvasAppliance","nativeElement","type","data","datasets","backgroundColor","label","labels","options","responsive","chartPower","canvasPower","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","selector","template","Activity","appliance","description","created_date"],"mappings":"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","file":"core-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\" mode=\\\"ios\\\">\\n    <ion-segment-button value=\\\"A\\\">\\n      <ion-label>Appliance</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"P\\\">\\n      <ion-label>Power</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div *ngIf=\\\"segment == 'A'\\\">\\n    <canvas #canvasAppliance></canvas>\\n  </div>\\n  \\n  <div *ngIf=\\\"segment == 'P'\\\">\\n    <canvas #canvasPower></canvas>\\n  </div>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-right\\\">\\n        <ion-label>\\n          <h1>461<span class=\\\"text-small\\\">W</span></h1>\\n          <p><span class=\\\"text-small\\\">RM0.70/hr</span></p>\\n        </ion-label>\\n      </ion-col>\\n      <ion-col>\\n        <ion-label>\\n          <h1>691<span class=\\\"text-small\\\">W</span></h1>\\n          <p><span class=\\\"text-small\\\">RM0.70/hr</span></p>\\n        </ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>Feed</h3>\\n    </ion-list-header>\\n\\n    <div [hidden]=\\\"!isFeedEmpty\\\">\\n      <img [src]=\\\"iconError\\\" class=\\\"error-img\\\">\\n      <p class=\\\"error-text\\\">No feeds loaded</p>\\n    </div>\\n    \\n    <div [hidden]=\\\"isFeedEmpty\\\">\\n      <ion-item detail lines=\\\"none\\\" detail *ngFor=\\\"let activity of activities\\\" (click)=\\\"view()\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Microwave'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Toaster'\\\" [src]=\\\"iconToaster\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h2>{{activity.appliance}}</h2>\\n          <p>{{activity.description}}</p>\\n        </ion-label>\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-text-wrap ion-text-right\\\">\\n          <p>{{activity.created_date}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \".error-img {\\n  display: grid;\\n  max-width: 7rem !important;\\n  margin-top: 3rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.error-text {\\n  color: #9d9fa6;\\n  display: grid;\\n  font-size: 0.9rem;\\n  margin-left: 4rem;\\n  margin-right: 4rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWFmaXFiYXNyaS9EZXZlbG9wbWVudC9Ta3Vuay9za3Vuay0wMDItemV1cy96ZXVzLW1vYmlsZS9zcmMvYXBwL2NvcmUvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzcmMvYXBwL2NvcmUvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3ItaW1nIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIG1heC13aWR0aDogN3JlbSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuICBcbi5lcnJvci10ZXh0IHtcbiAgICBjb2xvcjogIzlkOWZhNjtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiA0cmVtO1xuICAgIG1hcmdpbi1yaWdodDogNHJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59IiwiLmVycm9yLWltZyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIG1heC13aWR0aDogN3JlbSAhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiAzcmVtO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uZXJyb3ItdGV4dCB7XG4gIGNvbG9yOiAjOWQ5ZmE2O1xuICBkaXNwbGF5OiBncmlkO1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgbWFyZ2luLWxlZnQ6IDRyZW07XG4gIG1hcmdpbi1yaWdodDogNHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Activity } from 'src/assets/mock/activities';\nimport { Router } from '@angular/router';\nimport { Chart } from \"chart.js\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  // Data\n  activities = []\n\n  // Segment\n  segment: string\n\n  // Chart\n  @ViewChild('canvasPower', {static: false}) canvasPower: ElementRef\n  @ViewChild('canvasAppliance', {static: false}) canvasAppliance: ElementRef\n  private chartPower\n  private chartAppliance\n\n  // Checker\n  isFeedEmpty: boolean = true\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n\n  constructor(\n    private router: Router\n  ) { \n    this.getData()\n  }\n\n  ngOnInit() {\n    this.segment = 'A'\n  }\n\n  getData() {\n    this.activities = Activity\n    if (this.activities.length == 0) {\n      this.isFeedEmpty = true\n    }\n    else {\n      this.isFeedEmpty = false\n    }\n  }\n\n  view() {\n    let path = '/appliance-detail'\n    this.router.navigate([path])\n  }\n\n  ionViewWillEnter() {\n    this.initChartAppliance()\n    this.initChartPower()\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment: ', this.segment)\n    console.log('Segment changed: ', ev)\n    if (this.segment == 'A') {\n      setTimeout(\n        () => {\n          this.initChartAppliance()\n        }, 1000\n      )\n    }\n    if (this.segment == 'P') {\n      setTimeout(\n        () => {\n          this.initChartPower()\n        }, 1000\n      )\n    }\n  }\n\n  initChartAppliance() {\n    this.chartAppliance = new Chart(this.canvasAppliance.nativeElement, {\n      type: 'pie',\n\t\t\tdata: {\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: [\n            55,\n            120,\n            155,\n            160,\n            95\n\t\t\t\t\t],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'red',\n\t\t\t\t\t\t'orange',\n\t\t\t\t\t\t'yellow',\n\t\t\t\t\t\t'green',\n\t\t\t\t\t\t'blue',\n\t\t\t\t\t],\n\t\t\t\t\tlabel: 'Dataset 1'\n\t\t\t\t}],\n\t\t\t\tlabels: [\n\t\t\t\t\t'Lamp',\n\t\t\t\t\t'Solar',\n\t\t\t\t\t'Fridge',\n\t\t\t\t\t'Microwave',\n\t\t\t\t\t'Fan'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true\n\t\t\t}\n    })\n  }\n\n  initChartPower() {\n    this.chartPower = new Chart(this.canvasPower.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n\n  }\n\n}\n","export const Activity = [\n    {\n        appliance: 'Microwave',\n        description: 'Turned off',\n        created_date: '08:12 a.m'\n    },\n    {\n        appliance: 'Microwave',\n        description: 'On for 1 minutes',\n        created_date: '08:10 a.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:30 p.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:29 p.m'\n    }\n]"]}