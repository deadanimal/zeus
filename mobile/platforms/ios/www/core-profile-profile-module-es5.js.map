{"version":3,"sources":["webpack:///src/app/core/profile/profile.page.html","webpack:///src/app/core/profile/profile-routing.module.ts","webpack:///src/app/core/profile/profile.module.ts","webpack:///src/app/core/profile/profile.page.scss","webpack:///src/app/core/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","authService","userService","jwtService","router","getData","navigate","getOne","userID","subscribe","user","destroyToken","navigatePage","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,wBAAwB;AAAA;AAAA,KAArC;;AAAaA,4BAAwB,6DAJpC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,iBAAiB;AAAA;AAAA,KAA9B;;AAAaA,qBAAiB,6DAT7B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,gFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,yDAAD;AAPN,KAAT,CAS6B,GAAjBD,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaE,WAAW;AAKtB;AACA;AACA;AACA;AACA;AACA;AAEA,2BACUC,WADV,EAEUC,WAFV,EAGUC,UAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,aAAAH,WAAA,GAAAA,WAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAER,aAAKC,OAAL;AACD;;AAnBqB;AAAA;AAAA,mCAqBX,CACV;AAtBqB;AAAA;AAAA,qCAwBTb,IAxBS,EAwBK;AACzB,eAAKY,MAAL,CAAYE,QAAZ,CAAqB,CAACd,IAAD,CAArB;AACD;AA1BqB;AAAA;AAAA,kCA4BZ;AAAA;;AACR,eAAKU,WAAL,CAAiBK,MAAjB,CAAwB,KAAKN,WAAL,CAAiBO,MAAzC,EAAiDC,SAAjD,CACE,YAAM;AAAE,iBAAI,CAACC,IAAL,GAAY,KAAI,CAACR,WAAL,CAAiBQ,IAA7B;AAAmC,WAD7C,EAEE,YAAM,CAAE,CAFV,EAGE,YAAM,CAAE,CAHV;AAKD;AAlCqB;AAAA;AAAA,iCAoCb;AACP,eAAKP,UAAL,CAAgBQ,YAAhB;AACA,eAAKC,YAAL,CAAkB,GAAlB;AACD;AAvCqB;;AAAA;AAAA,OAAxB;;;;cAayB;;cACA;;cACD;;cACJ;;;;AAhBPZ,eAAW,6DALvB,gEAAU;AACTa,cAAQ,EAAE,aADD;AAETC,cAAQ,EAAR;AAAA;AAAA,mGAFS;;;;AAAA,KAAV,CAKuB,GAAXd,WAAW,CAAX","file":"core-profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Profile</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>Personal</h3>\\n    </ion-list-header>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-information')\\\">\\n      <ion-icon name=\\\"person-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>Information</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>Hardware</h3>\\n    </ion-list-header>\\n    \\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-hardware')\\\">\\n      <ion-icon name=\\\"hardware-chip-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>Settings</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>Support</h3>\\n    </ion-list-header>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-help')\\\">\\n      <ion-icon name=\\\"help-buoy-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>Help</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-share')\\\" disabled>\\n      <ion-icon name=\\\"share-social-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>Share</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-about')\\\">\\n      <ion-icon name=\\\"information-circle-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>About</h3>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-padding ion-no-border\\\" transparent>\\n  <ion-button\\n    class=\\\"round\\\" \\n    shape=\\\"round\\\" \\n    expand=\\\"block\\\"\\n    mode=\\\"ios\\\"\\n    (click)=\\\"logout()\\\"\\n  >\\n    Logout\\n  </ion-button>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/shared/services/users/users.model';\nimport { JwtService } from 'src/app/shared/handler/jwt/jwt.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  // Data\n  user: User\n\n  // Language\n  // selectedLanguage: string\n  // languageTypes = [\n  //   { value: 'en', text: 'English' },\n  //   { value: 'bm', text: 'Bahasa Malaysia' }\n  // ]\n\n  constructor(\n    private authService: AuthService,\n    private userService: UsersService,\n    private jwtService: JwtService,\n    private router: Router\n  ) { \n    this.getData()\n  }\n\n  ngOnInit() {\n  }\n\n  navigatePage(path: string) {\n    this.router.navigate([path])\n  }\n\n  getData() {\n    this.userService.getOne(this.authService.userID).subscribe(\n      () => { this.user = this.userService.user },\n      () => {},\n      () => {}\n    )\n  }\n\n  logout() {\n    this.jwtService.destroyToken()\n    this.navigatePage('/')\n  }\n\n}\n"]}