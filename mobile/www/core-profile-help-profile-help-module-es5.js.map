{"version":3,"sources":["webpack:///src/app/core/profile-help/profile-help.page.html","webpack:///src/app/core/profile-help/profile-help-routing.module.ts","webpack:///src/app/core/profile-help/profile-help.module.ts","webpack:///src/app/core/profile-help/profile-help.page.scss","webpack:///src/app/core/profile-help/profile-help.page.ts","webpack:///src/app/shared/services/tickets/tickets.service.ts"],"names":["routes","path","component","ProfileHelpPageRoutingModule","imports","forChild","exports","ProfileHelpPageModule","declarations","ProfileHelpPage","ticketService","router","iconSpeech","iconPhone1","iconPhone2","tickets","navigate","ticketsFiltered","selector","template","TicketsService","http","urlTickets","baseUrl","body","post","pipe","res","console","log","get","id","urlID","ticket","patch","providedIn"],"mappings":"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","file":"core-profile-help-profile-help-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/core/profile\\\" routerLink=\\\"/core/profile\\\" routerDirection=\\\"back\\\" text=\\\"\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Help</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list mode=\\\"ios\\\" class=\\\"ion-no-margin list-core\\\">\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>New ticket</h3>\\n    </ion-list-header>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-help-ticket')\\\">\\n      <ion-icon name=\\\"reader-outline\\\" color=\\\"primary\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>\\n        <h3>Create new ticket</h3>\\n      </ion-label>\\n    </ion-item>\\n\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>Ticket history</h3>\\n    </ion-list-header>\\n\\n    <ion-item lines=\\\"none\\\" detail (click)=\\\"navigatePage('/profile-help-ticket')\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"iconSpeech\\\">\\n      </ion-avatar>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h4>Ticket</h4>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-list-header mode=\\\"ios\\\">\\n    <h3>Help and support</h3>\\n  </ion-list-header>\\n\\n  <ion-item lines=\\\"none\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n      <img [src]=\\\"iconPhone1\\\">\\n    </ion-avatar>\\n    <ion-label class=\\\"ion-text-wrap\\\">\\n      <h4>Hotline</h4>\\n      <p>03-1234567</p>\\n    </ion-label>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n      <img [src]=\\\"iconPhone2\\\">\\n    </ion-avatar>\\n    <ion-label class=\\\"ion-text-wrap\\\">\\n      <h4>Technical support</h4>\\n      <p>15454</p>\\n    </ion-label>\\n  </ion-item>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileHelpPage } from './profile-help.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileHelpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileHelpPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfileHelpPageRoutingModule } from './profile-help-routing.module';\n\nimport { ProfileHelpPage } from './profile-help.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfileHelpPageRoutingModule\n  ],\n  declarations: [ProfileHelpPage]\n})\nexport class ProfileHelpPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvcHJvZmlsZS1oZWxwL3Byb2ZpbGUtaGVscC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { TicketsService } from 'src/app/shared/services/tickets/tickets.service';\nimport { Ticket } from 'src/app/shared/services/tickets/tickets.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-help',\n  templateUrl: './profile-help.page.html',\n  styleUrls: ['./profile-help.page.scss'],\n})\nexport class ProfileHelpPage implements OnInit {\n\n  // Icon\n  iconSpeech = 'assets/img/settings/speech-bubble.svg'\n  iconPhone1 = 'assets/img/settings/phone1.svg'\n  iconPhone2 = 'assets/img/settings/phone2.svg'\n\n  // Data\n  tickets: Ticket[] = []\n\n  constructor(\n    private ticketService: TicketsService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  navigatePage(path: string) {\n    this.router.navigate([path])\n  }\n\n  getData() {\n    this.tickets = this.ticketService.ticketsFiltered\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Form } from '@angular/forms';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Ticket } from './tickets.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketsService {\n\n   // URL\n   public urlTickets: string = environment.baseUrl + 'v1/tickets/'\n\n   // Data\n   public ticket: Ticket\n   public tickets: Ticket[] = []\n   public ticketsFiltered: Ticket[] = []\n \n   constructor(\n     private http: HttpClient\n   ) { }\n \n   post(body: Form): Observable<Ticket> {\n     return this.http.post<any>(this.urlTickets, body).pipe(\n       tap((res) => {\n         console.log('Ticket: ', res)\n       })\n     )\n   }\n \n   get(): Observable<Ticket[]> {\n     return this.http.get<Ticket[]>(this.urlTickets).pipe(\n       tap((res: Ticket[]) => {\n         console.log('Tickets: ', res)\n         this.tickets = res\n       })\n     )\n   }\n\n   getOne(id: string): Observable<Ticket> {\n    let urlID = this.urlTickets + id + '/'\n    return this.http.get<Ticket>(urlID).pipe(\n      tap((res: Ticket) => {\n        console.log('Ticket: ', res)\n        this.ticket = res\n      })\n    )\n  }\n \n   update(body: Form): Observable<Ticket> {\n     return this.http.patch<Ticket>(this.urlTickets, body).pipe(\n       tap((res) => {\n         console.log('Ticket: ', res)\n       })\n     )\n   }\n \n   delete(id: string): Observable<any> {\n     return this.http.delete<any>(this.urlTickets + id + '/').pipe(\n       tap((res) => {\n         console.log('Ticket: ', res)\n       })\n     )\n   }\n\n}\n"]}