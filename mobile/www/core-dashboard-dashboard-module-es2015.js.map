{"version":3,"sources":["./src/app/core/dashboard/dashboard.page.html","./src/app/core/dashboard/dashboard-routing.module.ts","./src/app/core/dashboard/dashboard.module.ts","./src/app/core/dashboard/dashboard.page.scss","./src/app/core/dashboard/dashboard.page.ts"],"names":[],"mappings":"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","file":"core-dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <canvas #canvasPower></canvas>\\n\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>News Feed</h3>\\n    </ion-list-header>\\n\\n    <div [hidden]=\\\"!isFeedEmpty\\\">\\n      <img [src]=\\\"iconError\\\" class=\\\"error-img\\\">\\n      <p class=\\\"error-text\\\">No feeds loaded</p>\\n    </div>\\n    \\n    <div [hidden]=\\\"isFeedEmpty\\\">\\n      <ion-item lines=\\\"none\\\" *ngFor=\\\"let feed of feeds\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"feed.appliance == 'TV'\\\" [src]=\\\"iconLCD\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Lamp'\\\" [src]=\\\"iconLamp\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Light'\\\" [src]=\\\"iconLamp1\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Fridge'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'AC'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"feed.appliance == 'AC NI'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Dishwasher'\\\" [src]=\\\"iconDishwasher\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Toaster'\\\" [src]=\\\"iconToaster\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Dryer'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Washing'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Microwave'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Air'\\\" [src]=\\\"iconAir\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Deep'\\\" [src]=\\\"iconDeep\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Blender'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Heater'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Induction'\\\" [src]=\\\"iconInduction\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Iron'\\\" [src]=\\\"iconIron\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Vaccuum'\\\" [src]=\\\"iconVacuum\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Water'\\\" [src]=\\\"iconWater\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Pressure Cooker'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Rice Cooker'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Pressure'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Oven'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Steamer'\\\" [src]=\\\"iconSteamer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Kettle'\\\" [src]=\\\"iconKettle\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h2>{{feed.appliance}}</h2>\\n        </ion-label>\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-text-wrap ion-text-right\\\">\\n          <ion-badge *ngIf=\\\"feed.at_state == 'ON'\\\" color=\\\"success\\\">ON</ion-badge>\\n          <ion-badge *ngIf=\\\"feed.at_state == 'OF'\\\" color=\\\"light\\\">OFF</ion-badge>\\n          <p>{{feed.created_at}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \".error-img {\\n  display: grid;\\n  max-width: 7rem !important;\\n  margin-top: 3rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.error-text {\\n  color: #9d9fa6;\\n  display: grid;\\n  font-size: 0.9rem;\\n  margin-left: 4rem;\\n  margin-right: 4rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWFmaXFiYXNyaS9EZXZlbG9wbWVudC9Ta3Vuay9za3Vuay0wMDItemV1cy9tb2JpbGUvc3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLWltZyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBtYXgtd2lkdGg6IDdyZW0gIWltcG9ydGFudDtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbiAgXG4uZXJyb3ItdGV4dCB7XG4gICAgY29sb3I6ICM5ZDlmYTY7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDRyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsIi5lcnJvci1pbWcge1xuICBkaXNwbGF5OiBncmlkO1xuICBtYXgtd2lkdGg6IDdyZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmVycm9yLXRleHQge1xuICBjb2xvcjogIzlkOWZhNjtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG4gIG1hcmdpbi1sZWZ0OiA0cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDRyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { Activity } from 'src/assets/mock/activities';\nimport { Router } from '@angular/router';\nimport { Chart } from \"chart.js\";\nimport { DevicesService } from 'src/app/shared/services/devices/devices.service';\nimport { interval } from 'rxjs';\nimport * as moment from 'moment';\nimport { AppliancesService } from 'src/app/shared/services/appliances/appliances.service';\nimport { Appliance } from 'src/app/shared/services/appliances/appliances.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  // Data\n  activities = []\n  activitiesLengthOld = 0\n  activitiesLengthNew = 0\n\n  notiActivities = []\n\n  dataKiri: number = 0\n  dataKanan: number = 0\n\n  feeds: any[] = []\n\n  // Segment\n  segment: string\n\n  // Chart\n  @ViewChild('canvasPower', { static: false }) canvasPower: ElementRef\n  @ViewChild('canvasAppliance', { static: false }) canvasAppliance: ElementRef\n  private chartPower\n  private chartAppliance\n\n  // Checker\n  isFeedEmpty: boolean = true\n\n\n  // Length\n  notifyMe: any[] = []\n\n  intervalFeed\n  intervalCSV\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconAirCond = 'assets/img/appliance/air-conditioner.svg'\n  iconDishwasher = 'assets/img/appliance/dishwasher.svg'\n  iconFridge = 'assets/img/appliance/fridge.svg'\n  iconLamp = 'assets/img/appliance/lamp.svg'\n  iconLamp1 = 'assets/img/appliance/lamp-1.svg'\n  iconLCD = 'assets/img/appliance/lcd.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n  iconDryer = 'assets/img/appliance/tumble-dryer.svg'\n  iconAir = 'assets/img/appliance/air.svg'\n  iconBlender = 'assets/img/appliance/blender.svg'\n  iconDeep = 'assets/img/appliance/deep.svg'\n  iconInduction = 'assets/img/appliance/induction.svg'\n  iconIron = 'assets/img/appliance/iron.svg'\n  iconVacuum = 'assets/img/appliance/vacuum.svg'\n  iconWater = 'assets/img/appliance/water-heater.svg'\n  iconCooker = 'assets/img/appliance/rice-cooker.svg'\n  iconSteamer = 'assets/img/appliance/steamer.svg'\n  iconKettle = 'assets/img/appliance/kettle.svg'\n\n  constructor(\n    private deviceService: DevicesService,\n    private applianceService: AppliancesService,\n    private router: Router\n  ) {\n    this.getData()\n  }\n\n  ngOnInit() {\n    this.segment = 'P'\n    \n    this.intervalFeed = setInterval(\n      () => {\n        this.getFeeds()\n        this.getCSV()\n      }, 2000\n    )\n  }\n\n  getFeeds() {\n    this.applianceService.getActivity().subscribe(\n      (res) => {\n        // console.log()\n        this.activities  = res\n        if (this.activitiesLengthNew == 0) {\n          this.activitiesLengthNew = this.activities.length\n        }\n        else {\n          this.activitiesLengthOld = this.activitiesLengthNew\n          this.activitiesLengthNew = this.activities.length\n        }\n\n        console.log('old', this.activitiesLengthOld)\n        console.log('new', this.activitiesLengthNew)\n\n        if (this.activitiesLengthNew != this.activitiesLengthOld) {\n          if (this.feeds.length < 5) {\n            console.log('Feed < 5')\n            this.applianceService.appliances.forEach(\n              (appliance) => {\n                if (appliance.id == this.activities[this.activitiesLengthNew-1].appliance) {\n                  let applianceName = appliance.name\n                  let timestamp = moment(this.activities[this.activitiesLengthNew-1].created_at).format('hh:mm:ss A')\n                  this.activities[this.activitiesLengthNew-1].appliance = applianceName\n                  this.activities[this.activitiesLengthNew-1].created_at = timestamp\n                  this.feeds.push(this.activities[this.activitiesLengthNew-1])\n                  console.log( 'gee',this.activities[this.activitiesLengthNew-1])\n                  console.log('Jumpa if')\n                  this.isFeedEmpty = false\n                  \n                }\n              }\n            )\n          }\n          else {            \n            this.applianceService.appliances.forEach(\n              (appliance) => {\n                if (appliance.id == this.activities[this.activitiesLengthNew-1].appliance) {\n                  console.log('Jumpa else')\n                  let applianceName = appliance.name\n                  let timestamp = moment(this.activities[this.activitiesLengthNew-1].created_at).format('hh:mm:ss A')\n                  this.activities[this.activitiesLengthNew-1].appliance = applianceName\n                  this.activities[this.activitiesLengthNew-1].created_at = timestamp\n                  this.feeds.push(this.activities[this.activitiesLengthNew-1])\n                  this.feeds.shift()\n                }\n              }\n            )\n          }\n        }\n      }\n    )\n  }\n\n  getCSV() {\n    this.deviceService.getCSV().subscribe(\n      (res) => {\n        console.log('l', res.body.length)\n        if (res.body.length < 100) {\n          let newData = JSON.parse(res.body)\n          if (newData.device == 'bolt-003') {\n\n            let label = moment.unix(newData.time).format('h:mm:ss a')\n            let power = newData.power\n            console.log('update', label, power)\n            this.chartPower.data.labels.push(label)\n            this.chartPower.data.datasets[0].data.push(power)\n            this.chartPower.update()\n          }\n        }\n        // console.log()\n      }\n    )\n  }\n\n  getData() {\n    this.applianceService.get().subscribe()\n  }\n\n  view() {\n    let path = '/appliance-detail'\n    this.router.navigate([path])\n  }\n\n  ionViewWillEnter() {\n    this.initChartPower()\n    this.initChartAppliance()\n  }\n\n  ionViewWillLeave() {\n    clearInterval(this.intervalCSV)\n    clearInterval(this.intervalFeed)\n    console.log('destroy')\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment: ', this.segment)\n    console.log('Segment changed: ', ev)\n    if (this.segment == 'A') {\n      setTimeout(\n        () => {\n          this.initChartAppliance()\n        }, 1000\n      )\n    }\n    if (this.segment == 'P') {\n      setTimeout(\n        () => {\n          this.initChartPower()\n        }, 1000\n      )\n    }\n  }\n\n  initChartAppliance() {\n    this.chartAppliance = new Chart(this.canvasAppliance.nativeElement, {\n      type: 'pie',\n      data: {\n        datasets: [{\n          data: [\n            55,\n            120,\n            155,\n            160,\n            95\n          ],\n          backgroundColor: [\n            'red',\n            'orange',\n            'yellow',\n            'green',\n            'blue',\n          ],\n          label: 'Dataset 1'\n        }],\n        labels: [\n          'Lamp',\n          'Solar',\n          'Fridge',\n          'Microwave',\n          'Fan'\n        ]\n      },\n      options: {\n        responsive: true\n      }\n    })\n  }\n\n  initChartPower() {\n    this.chartPower = new Chart(this.canvasPower.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"kWh\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n\n  }\n\n  \n\n  addData(chart, label, data) {\n\n  }\n\n\n  getNoti() {\n    this.notiActivities = []\n    this.deviceService.getValue().subscribe(\n      (res: any[]) => {\n        res = res.sort((n1, n2) => n1 - n2);\n        res.forEach(\n          (data) => {\n            data.time = moment.unix(data.time).format('h:mm:ss a')\n            this.notiActivities.push(data)\n          }\n        )\n      },\n      () => { },\n      () => { }\n    )\n  }\n\n}\n"],"sourceRoot":"webpack:///"}