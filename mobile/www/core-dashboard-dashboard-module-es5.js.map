{"version":3,"sources":["webpack:///src/app/core/dashboard/dashboard.page.html","webpack:///src/app/core/dashboard/dashboard-routing.module.ts","webpack:///src/app/core/dashboard/dashboard.module.ts","webpack:///src/app/core/dashboard/dashboard.page.scss","webpack:///src/app/core/dashboard/dashboard.page.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","DashboardPage","deviceService","applianceService","router","activities","activitiesLengthOld","activitiesLengthNew","notiActivities","dataKiri","dataKanan","feeds","isFeedEmpty","notifyMe","iconError","iconAirCond","iconDishwasher","iconFridge","iconLamp","iconLamp1","iconLCD","iconMicrowave","iconToaster","iconDryer","iconAir","iconBlender","iconDeep","iconInduction","iconIron","iconVacuum","iconWater","iconCooker","iconSteamer","iconKettle","getData","segment","intervalFeed","setInterval","getFeeds","getCSV","getActivity","subscribe","res","length","console","log","appliances","forEach","appliance","id","applianceName","name","timestamp","created_at","format","push","shift","body","newData","JSON","parse","device","label","time","power","chartPower","data","labels","datasets","update","get","navigate","initChartPower","initChartAppliance","clearInterval","intervalCSV","ev","setTimeout","chartAppliance","canvasAppliance","nativeElement","type","backgroundColor","options","responsive","canvasPower","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","chart","getValue","sort","n1","n2","selector","template"],"mappings":"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","file":"core-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <canvas #canvasPower></canvas>\\n\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>News Feed</h3>\\n    </ion-list-header>\\n\\n    <div [hidden]=\\\"!isFeedEmpty\\\">\\n      <img [src]=\\\"iconError\\\" class=\\\"error-img\\\">\\n      <p class=\\\"error-text\\\">No feeds loaded</p>\\n    </div>\\n    \\n    <div [hidden]=\\\"isFeedEmpty\\\">\\n      <ion-item lines=\\\"none\\\" *ngFor=\\\"let feed of feeds\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"feed.appliance == 'TV'\\\" [src]=\\\"iconLCD\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Lamp'\\\" [src]=\\\"iconLamp\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Light'\\\" [src]=\\\"iconLamp1\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Fridge'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'AC'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"feed.appliance == 'AC NI'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Dishwasher'\\\" [src]=\\\"iconDishwasher\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Toaster'\\\" [src]=\\\"iconToaster\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Dryer'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Washing'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Microwave'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Air'\\\" [src]=\\\"iconAir\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Deep'\\\" [src]=\\\"iconDeep\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Blender'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Heater'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Induction'\\\" [src]=\\\"iconInduction\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Iron'\\\" [src]=\\\"iconIron\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Vaccuum'\\\" [src]=\\\"iconVacuum\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Water'\\\" [src]=\\\"iconWater\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Pressure Cooker'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Rice Cooker'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Pressure'\\\" [src]=\\\"iconCooker\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Oven'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Steamer'\\\" [src]=\\\"iconSteamer\\\">\\n          <img *ngIf=\\\"feed.appliance == 'Kettle'\\\" [src]=\\\"iconKettle\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h2>{{feed.appliance}}</h2>\\n        </ion-label>\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-text-wrap ion-text-right\\\">\\n          <ion-badge *ngIf=\\\"feed.at_state == 'ON'\\\" color=\\\"success\\\">ON</ion-badge>\\n          <ion-badge *ngIf=\\\"feed.at_state == 'OF'\\\" color=\\\"light\\\">OFF</ion-badge>\\n          <p>{{feed.created_at}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \".error-img {\\n  display: grid;\\n  max-width: 7rem !important;\\n  margin-top: 3rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.error-text {\\n  color: #9d9fa6;\\n  display: grid;\\n  font-size: 0.9rem;\\n  margin-left: 4rem;\\n  margin-right: 4rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWFmaXFiYXNyaS9EZXZlbG9wbWVudC9Ta3Vuay9za3Vuay0wMDItemV1cy9tb2JpbGUvc3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb3JlL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLWltZyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBtYXgtd2lkdGg6IDdyZW0gIWltcG9ydGFudDtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbiAgXG4uZXJyb3ItdGV4dCB7XG4gICAgY29sb3I6ICM5ZDlmYTY7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDRyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsIi5lcnJvci1pbWcge1xuICBkaXNwbGF5OiBncmlkO1xuICBtYXgtd2lkdGg6IDdyZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmVycm9yLXRleHQge1xuICBjb2xvcjogIzlkOWZhNjtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG4gIG1hcmdpbi1sZWZ0OiA0cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDRyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { Activity } from 'src/assets/mock/activities';\nimport { Router } from '@angular/router';\nimport { Chart } from \"chart.js\";\nimport { DevicesService } from 'src/app/shared/services/devices/devices.service';\nimport { interval } from 'rxjs';\nimport * as moment from 'moment';\nimport { AppliancesService } from 'src/app/shared/services/appliances/appliances.service';\nimport { Appliance } from 'src/app/shared/services/appliances/appliances.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  // Data\n  activities = []\n  activitiesLengthOld = 0\n  activitiesLengthNew = 0\n\n  notiActivities = []\n\n  dataKiri: number = 0\n  dataKanan: number = 0\n\n  feeds: any[] = []\n\n  // Segment\n  segment: string\n\n  // Chart\n  @ViewChild('canvasPower', { static: false }) canvasPower: ElementRef\n  @ViewChild('canvasAppliance', { static: false }) canvasAppliance: ElementRef\n  private chartPower\n  private chartAppliance\n\n  // Checker\n  isFeedEmpty: boolean = true\n\n\n  // Length\n  notifyMe: any[] = []\n\n  intervalFeed\n  intervalCSV\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconAirCond = 'assets/img/appliance/air-conditioner.svg'\n  iconDishwasher = 'assets/img/appliance/dishwasher.svg'\n  iconFridge = 'assets/img/appliance/fridge.svg'\n  iconLamp = 'assets/img/appliance/lamp.svg'\n  iconLamp1 = 'assets/img/appliance/lamp-1.svg'\n  iconLCD = 'assets/img/appliance/lcd.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n  iconDryer = 'assets/img/appliance/tumble-dryer.svg'\n  iconAir = 'assets/img/appliance/air.svg'\n  iconBlender = 'assets/img/appliance/blender.svg'\n  iconDeep = 'assets/img/appliance/deep.svg'\n  iconInduction = 'assets/img/appliance/induction.svg'\n  iconIron = 'assets/img/appliance/iron.svg'\n  iconVacuum = 'assets/img/appliance/vacuum.svg'\n  iconWater = 'assets/img/appliance/water-heater.svg'\n  iconCooker = 'assets/img/appliance/rice-cooker.svg'\n  iconSteamer = 'assets/img/appliance/steamer.svg'\n  iconKettle = 'assets/img/appliance/kettle.svg'\n\n  constructor(\n    private deviceService: DevicesService,\n    private applianceService: AppliancesService,\n    private router: Router\n  ) {\n    this.getData()\n  }\n\n  ngOnInit() {\n    this.segment = 'P'\n    \n    this.intervalFeed = setInterval(\n      () => {\n        this.getFeeds()\n        this.getCSV()\n      }, 2000\n    )\n  }\n\n  getFeeds() {\n    this.applianceService.getActivity().subscribe(\n      (res) => {\n        // console.log()\n        this.activities  = res\n        if (this.activitiesLengthNew == 0) {\n          this.activitiesLengthNew = this.activities.length\n        }\n        else {\n          this.activitiesLengthOld = this.activitiesLengthNew\n          this.activitiesLengthNew = this.activities.length\n        }\n\n        console.log('old', this.activitiesLengthOld)\n        console.log('new', this.activitiesLengthNew)\n\n        if (this.activitiesLengthNew != this.activitiesLengthOld) {\n          if (this.feeds.length < 5) {\n            console.log('Feed < 5')\n            this.applianceService.appliances.forEach(\n              (appliance) => {\n                if (appliance.id == this.activities[this.activitiesLengthNew-1].appliance) {\n                  let applianceName = appliance.name\n                  let timestamp = moment(this.activities[this.activitiesLengthNew-1].created_at).format('hh:mm:ss A')\n                  this.activities[this.activitiesLengthNew-1].appliance = applianceName\n                  this.activities[this.activitiesLengthNew-1].created_at = timestamp\n                  this.feeds.push(this.activities[this.activitiesLengthNew-1])\n                  console.log( 'gee',this.activities[this.activitiesLengthNew-1])\n                  console.log('Jumpa if')\n                  this.isFeedEmpty = false\n                  \n                }\n              }\n            )\n          }\n          else {            \n            this.applianceService.appliances.forEach(\n              (appliance) => {\n                if (appliance.id == this.activities[this.activitiesLengthNew-1].appliance) {\n                  console.log('Jumpa else')\n                  let applianceName = appliance.name\n                  let timestamp = moment(this.activities[this.activitiesLengthNew-1].created_at).format('hh:mm:ss A')\n                  this.activities[this.activitiesLengthNew-1].appliance = applianceName\n                  this.activities[this.activitiesLengthNew-1].created_at = timestamp\n                  this.feeds.push(this.activities[this.activitiesLengthNew-1])\n                  this.feeds.shift()\n                }\n              }\n            )\n          }\n        }\n      }\n    )\n  }\n\n  getCSV() {\n    this.deviceService.getCSV().subscribe(\n      (res) => {\n        console.log('l', res.body.length)\n        if (res.body.length < 100) {\n          let newData = JSON.parse(res.body)\n          if (newData.device == 'bolt-003') {\n\n            let label = moment.unix(newData.time).format('h:mm:ss a')\n            let power = newData.power\n            console.log('update', label, power)\n            this.chartPower.data.labels.push(label)\n            this.chartPower.data.datasets[0].data.push(power)\n            this.chartPower.update()\n          }\n        }\n        // console.log()\n      }\n    )\n  }\n\n  getData() {\n    this.applianceService.get().subscribe()\n  }\n\n  view() {\n    let path = '/appliance-detail'\n    this.router.navigate([path])\n  }\n\n  ionViewWillEnter() {\n    this.initChartPower()\n    this.initChartAppliance()\n  }\n\n  ionViewWillLeave() {\n    clearInterval(this.intervalCSV)\n    clearInterval(this.intervalFeed)\n    console.log('destroy')\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment: ', this.segment)\n    console.log('Segment changed: ', ev)\n    if (this.segment == 'A') {\n      setTimeout(\n        () => {\n          this.initChartAppliance()\n        }, 1000\n      )\n    }\n    if (this.segment == 'P') {\n      setTimeout(\n        () => {\n          this.initChartPower()\n        }, 1000\n      )\n    }\n  }\n\n  initChartAppliance() {\n    this.chartAppliance = new Chart(this.canvasAppliance.nativeElement, {\n      type: 'pie',\n      data: {\n        datasets: [{\n          data: [\n            55,\n            120,\n            155,\n            160,\n            95\n          ],\n          backgroundColor: [\n            'red',\n            'orange',\n            'yellow',\n            'green',\n            'blue',\n          ],\n          label: 'Dataset 1'\n        }],\n        labels: [\n          'Lamp',\n          'Solar',\n          'Fridge',\n          'Microwave',\n          'Fan'\n        ]\n      },\n      options: {\n        responsive: true\n      }\n    })\n  }\n\n  initChartPower() {\n    this.chartPower = new Chart(this.canvasPower.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"kWh\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n\n  }\n\n  \n\n  addData(chart, label, data) {\n\n  }\n\n\n  getNoti() {\n    this.notiActivities = []\n    this.deviceService.getValue().subscribe(\n      (res: any[]) => {\n        res = res.sort((n1, n2) => n1 - n2);\n        res.forEach(\n          (data) => {\n            data.time = moment.unix(data.time).format('h:mm:ss a')\n            this.notiActivities.push(data)\n          }\n        )\n      },\n      () => { },\n      () => { }\n    )\n  }\n\n}\n"]}