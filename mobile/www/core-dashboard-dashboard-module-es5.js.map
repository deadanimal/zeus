{"version":3,"sources":["webpack:///src/app/core/dashboard/dashboard.page.html","webpack:///src/app/core/dashboard/dashboard-routing.module.ts","webpack:///src/app/core/dashboard/dashboard.module.ts","webpack:///src/app/core/dashboard/dashboard.page.scss","webpack:///src/app/core/dashboard/dashboard.page.ts","webpack:///src/assets/mock/activities.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","DashboardPage","deviceService","router","activities","notiActivities","dataKiri","dataKanan","isFeedEmpty","notifyMe","iconError","iconAirCond","iconDishwasher","iconFridge","iconLamp","iconLamp1","iconLCD","iconMicrowave","iconToaster","iconDryer","iconAir","iconBlender","iconDeep","iconInduction","iconIron","iconVacuum","getData","getCSV","segment","intervalNoti","setInterval","getNoti","length","navigate","initChartPower","initChartAppliance","clearInterval","intervalCSV","ev","console","log","setTimeout","chartAppliance","canvasAppliance","nativeElement","type","data","datasets","backgroundColor","label","labels","options","responsive","chartPower","canvasPower","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","subscribe","res","row","body","split","test","format","data1","data2","data3","push","update","chart","getValue","sort","n1","n2","forEach","time","selector","template","Activity","appliance","description","created_date"],"mappings":"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","file":"core-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\" mode=\\\"ios\\\">\\n    <ion-segment-button value=\\\"A\\\">\\n      <ion-label>Appliance</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"P\\\">\\n      <ion-label>Power</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div *ngIf=\\\"segment == 'A'\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <canvas #canvasAppliance></canvas>\\n        </ion-col>\\n\\n        <ion-col>\\n          ssss\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n  \\n  <div *ngIf=\\\"segment == 'P'\\\">\\n    <canvas #canvasPower></canvas>\\n  </div>\\n\\n  <ion-list\\n    mode=\\\"ios\\\"\\n    class=\\\"ion-no-margin list-core\\\"\\n  >\\n    <ion-list-header mode=\\\"ios\\\">\\n      <h3>News Feed</h3>\\n    </ion-list-header>\\n\\n    <div [hidden]=\\\"!isFeedEmpty\\\">\\n      <img [src]=\\\"iconError\\\" class=\\\"error-img\\\">\\n      <p class=\\\"error-text\\\">No feeds loaded</p>\\n    </div>\\n    \\n    <div [hidden]=\\\"isFeedEmpty\\\">\\n      <ion-item lines=\\\"none\\\" *ngFor=\\\"let activity of activities\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"activity.appliance == 'TV'\\\" [src]=\\\"iconLCD\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Lamp'\\\" [src]=\\\"iconLamp\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Light'\\\" [src]=\\\"iconLamp1\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Fridge'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'AC'\\\" [src]=\\\"iconAirCond\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Dishwasher'\\\" [src]=\\\"iconDishwasher\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Toaster'\\\" [src]=\\\"iconToaster\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Dryer'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Washing'\\\" [src]=\\\"iconDryer\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Microwave'\\\" [src]=\\\"iconMicrowave\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Air'\\\" [src]=\\\"iconAir\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Deep'\\\" [src]=\\\"iconDeep\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Blender'\\\" [src]=\\\"iconBlender\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Induction'\\\" [src]=\\\"iconInduction\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Iron'\\\" [src]=\\\"iconIron\\\">\\n          <img *ngIf=\\\"activity.appliance == 'Vacuum'\\\" [src]=\\\"iconVacuum\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h2>{{activity.appliance}}</h2>\\n        </ion-label>\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-text-wrap ion-text-right\\\">\\n          <p>{{activity.created_date}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \".error-img {\\n  display: grid;\\n  max-width: 7rem !important;\\n  margin-top: 3rem;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.error-text {\\n  color: #9d9fa6;\\n  display: grid;\\n  font-size: 0.9rem;\\n  margin-left: 4rem;\\n  margin-right: 4rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mYXJyYWh6ZWx5bmEvRG9jdW1lbnRzL3pldXMvbW9iaWxlL3NyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1pbWcge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgbWF4LXdpZHRoOiA3cmVtICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogM3JlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4gIFxuLmVycm9yLXRleHQge1xuICAgIGNvbG9yOiAjOWQ5ZmE2O1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDRyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iLCIuZXJyb3ItaW1nIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWF4LXdpZHRoOiA3cmVtICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDNyZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5lcnJvci10ZXh0IHtcbiAgY29sb3I6ICM5ZDlmYTY7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Activity } from 'src/assets/mock/activities';\nimport { Router } from '@angular/router';\nimport { Chart } from \"chart.js\";\nimport { DevicesService } from 'src/app/shared/services/devices/devices.service';\nimport { interval } from 'rxjs';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  // Data\n  activities = []\n\n  notiActivities = []\n\n  dataKiri: number = 0\n  dataKanan: number = 0\n\n  // Segment\n  segment: string\n\n  // Chart\n  @ViewChild('canvasPower', {static: false}) canvasPower: ElementRef\n  @ViewChild('canvasAppliance', {static: false}) canvasAppliance: ElementRef\n  private chartPower\n  private chartAppliance\n\n  // Checker\n  isFeedEmpty: boolean = true\n\n\n  // Length\n  notifyMe: any[] = []\n\n  intervalNoti\n  intervalCSV\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconAirCond = 'assets/img/appliance/air-conditioner.svg'\n  iconDishwasher = 'assets/img/appliance/dishwasher.svg'\n  iconFridge = 'assets/img/appliance/fridge.svg'\n  iconLamp = 'assets/img/appliance/lamp.svg'\n  iconLamp1 = 'assets/img/appliance/lamp-1.svg'\n  iconLCD = 'assets/img/appliance/lcd.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n  iconDryer = 'assets/img/appliance/tumble-dryer.svg'\n  iconAir = 'assets/img/appliance/air.svg'\n  iconBlender = 'assets/img/appliance/blender.svg'\n  iconDeep = 'assets/img/appliance/deep.svg'\n  iconInduction = 'assets/img/appliance/induction.svg'\n  iconIron = 'assets/img/appliance/iron.svg'\n  iconVacuum = 'assets/img/appliance/vacuum.svg'\n\n  constructor(\n    private deviceService: DevicesService,\n    private router: Router\n  ) { \n    this.getData()\n    this.getCSV()\n  }\n\n  ngOnInit() {\n    this.segment = 'P'\n    this.intervalNoti = setInterval(\n      () => {\n        this.getNoti()\n      },\n      10000\n    )\n  }\n\n  getData() {\n    this.activities = Activity\n    if (this.activities.length == 0) {\n      this.isFeedEmpty = true\n    }\n    else {\n      this.isFeedEmpty = false\n    }\n  }\n\n  view() {\n    let path = '/appliance-detail'\n    this.router.navigate([path])\n  }\n\n  ionViewWillEnter() {\n    this.initChartPower()\n    this.initChartAppliance()\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalCSV)\n    clearInterval(this.intervalNoti)\n  }\n\n  segmentChanged(ev: any) {\n    console.log('Segment: ', this.segment)\n    console.log('Segment changed: ', ev)\n    if (this.segment == 'A') {\n      setTimeout(\n        () => {\n          this.initChartAppliance()\n        }, 1000\n      )\n    }\n    if (this.segment == 'P') {\n      setTimeout(\n        () => {\n          this.initChartPower()\n        }, 1000\n      )\n    }\n  }\n\n  initChartAppliance() {\n    this.chartAppliance = new Chart(this.canvasAppliance.nativeElement, {\n      type: 'pie',\n\t\t\tdata: {\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: [\n            55,\n            120,\n            155,\n            160,\n            95\n\t\t\t\t\t],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'red',\n\t\t\t\t\t\t'orange',\n\t\t\t\t\t\t'yellow',\n\t\t\t\t\t\t'green',\n\t\t\t\t\t\t'blue',\n\t\t\t\t\t],\n\t\t\t\t\tlabel: 'Dataset 1'\n\t\t\t\t}],\n\t\t\t\tlabels: [\n\t\t\t\t\t'Lamp',\n\t\t\t\t\t'Solar',\n\t\t\t\t\t'Fridge',\n\t\t\t\t\t'Microwave',\n\t\t\t\t\t'Fan'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true\n\t\t\t}\n    })\n  }\n\n  initChartPower() {\n    this.chartPower = new Chart(this.canvasPower.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          },\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(192,75,192,0.4)\",\n            borderColor: \"rgba(192,75,192,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          },\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,75,0.4)\",\n            borderColor: \"rgba(75,192,75,0.4)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n\n  }\n\n  getCSV() {\n    this.deviceService.getCSV().subscribe(\n      (res) => {\n        let row = res.body.split(\",\")\n        if (res.body.length < 30) {\n          let label = moment.unix(res.test).format('h:mm:ss a')\n          let data1 = row[0]*240/1000\n          let data2 = row[1]*240/1000\n          let data3 = row[2]*240/1000\n          this.dataKiri = (this.dataKiri + data1 + data2 + data3) / 60\n          this.dataKanan = (this.dataKanan + data1 + data2 + data3) / 50\n          this.chartPower.data.labels.push(label)\n          this.chartPower.data.datasets[0].data.push(data1)\n          this.chartPower.data.datasets[1].data.push(data2)\n          this.chartPower.data.datasets[2].data.push(data3)\n          this.chartPower.update()\n        }\n        // console.log('Dashboard: ', res)\n        // this.\n        console.log()\n      }\n    )\n    // this.intervalCSV = setInterval(\n    //   () => {\n    //     this.deviceService.getCSV().subscribe(\n    //       (res) => {\n    //         let row = res.body.split(\",\")\n    //         if (res.body.length < 30) {\n    //           let label = moment.unix(res.test).format('h:mm:ss a')\n    //           let data1 = row[0]*240/1000\n    //           let data2 = row[1]*240/1000\n    //           let data3 = row[2]*240/1000\n    //           this.dataKiri = (this.dataKiri + data1 + data2 + data3) / 60\n    //           this.dataKanan = (this.dataKanan + data1 + data2 + data3) / 50\n    //           this.chartPower.data.labels.push(label)\n    //           this.chartPower.data.datasets[0].data.push(data1)\n    //           this.chartPower.data.datasets[1].data.push(data2)\n    //           this.chartPower.data.datasets[2].data.push(data3)\n    //           this.chartPower.update()\n    //         }\n    //         // console.log('Dashboard: ', res)\n    //         // this.\n    //         console.log()\n    //       }\n    //     )\n    //   }, 1000\n    // )\n  }\n\n  addData(chart, label, data) {\n\n  }\n\n\n  getNoti() {\n    this.notiActivities = []\n    this.deviceService.getValue().subscribe(\n      (res: any[]) => {\n        res = res.sort((n1,n2) => n1 - n2);\n        res.forEach(\n          (data) => {\n            data.time = moment.unix(data.time).format('h:mm:ss a')\n            this.notiActivities.push(data)\n          }\n        )\n      },\n      () => {},\n      () => {}\n    )\n  }\n\n}\n","export const Activity = [\n    {\n        appliance: 'Microwave',\n        description: 'Turned off',\n        created_date: '08:12 a.m'\n    },\n    {\n        appliance: 'Microwave',\n        description: 'On for 1 minutes',\n        created_date: '08:10 a.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:30 p.m'\n    },\n    {\n        appliance: 'Toaster',\n        description: 'Turned off',\n        created_date: '19/04 08:29 p.m'\n    }\n]"]}