{"version":3,"sources":["webpack:///src/app/core/appliance-detail/appliance-detail.page.html","webpack:///src/app/core/appliance-detail/appliance-detail-routing.module.ts","webpack:///src/app/core/appliance-detail/appliance-detail.module.ts","webpack:///src/app/core/appliance-detail/appliance-detail.page.scss","webpack:///src/app/core/appliance-detail/appliance-detail.page.ts"],"names":["routes","path","component","ApplianceDetailPageRoutingModule","imports","forChild","exports","ApplianceDetailPageModule","declarations","ApplianceDetailPage","applianceService","deviceService","router","activatedRoute","applianceName","iconError","iconAirCond","iconDishwasher","iconFridge","iconLamp","iconLamp1","iconLCD","iconMicrowave","iconToaster","iconDryer","iconAir","iconBlender","iconDeep","iconInduction","iconIron","iconVacuum","getData","queryParams","subscribe","params","special","appliance","JSON","parse","segment","initChartDay","clearInterval","intervalCSV","navigationPath","navigate","ev","console","log","setTimeout","initChartWeek","initChartMonth","initChartYear","chartDay","canvasDay","nativeElement","type","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","chartWeek","canvasWeek","chartMonth","canvasMonth","chartYear","canvasYear","getValue","res","forEach","powerValue","Number","power","newTime","time","format","push","update","selector","template"],"mappings":"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","file":"core-appliance-detail-appliance-detail-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button \\n        defaultHref=\\\"/core/appliances\\\"\\n        routerLink=\\\"/core/appliances\\\"\\n        routerDirection=\\\"back\\\"\\n        text=\\\"\\\"\\n      >\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Appliance Detail</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\t<!-- <ion-img\\n\\t\\t[src]=\\\"iconLamp\\\"\\n\\t\\tstyle=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\"\\n\\t>\\n\\t</ion-img> -->\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'TV'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconLCD\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Lamp'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconLamp\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Light'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconLamp1\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Fridge'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconDryer\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'AC'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconAirCond\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Dishwasher'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconDishwasher\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Toaster'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconToaster\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Dryer'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconDryer\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Washing'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconDryer\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Microwave'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconMicrowave\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Air'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconAir\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Deep'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconDeep\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Blender'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconBlender\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Induction'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconInduction\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Iron'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconIron\\\"></ion-img>\\n\\t\\t<ion-img *ngIf=\\\"appliance.type == 'Vacuum'\\\" style=\\\"max-width: 50%; margin-top: 5%; margin-left: auto; margin-right: auto\\\" [src]=\\\"iconVacuum\\\"></ion-img>\\n\\n  <ion-card mode=\\\"ios\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list class=\\\"ion-margin\\\">\\n\\t\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t\\t<h2 class=\\\"ion-no-margin\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{appliance.name}}\\n\\t\\t\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t\\t\\t<ion-text>\\n\\t\\t\\t\\t\\t\\t\\t<h3 style=\\\"font-size: 0.7rem; margin: 0;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tYear 2020\\n\\t\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t\\t\\t<h3 style=\\\"font-size: 0.7rem; margin: 0;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t12 Month Warranty\\n\\t\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t\\t</ion-text>\\n\\t\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t\\t<!-- <ion-toggle slot=\\\"end\\\" color=\\\"primary\\\" disabled></ion-toggle> -->\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t\\t</ion-list>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n\\t<ion-card mode=\\\"ios\\\">\\n\\t\\t<ion-card-header class=\\\"ion-text-center\\\">\\n\\t\\t\\t<ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n\\t\\t\\t\\t<ion-segment-button value=\\\"D\\\">\\n\\t\\t\\t\\t  <ion-label>D</ion-label>\\n\\t\\t\\t\\t</ion-segment-button>\\n\\t\\t\\t\\t<ion-segment-button value=\\\"W\\\">\\n\\t\\t\\t\\t  <ion-label>W</ion-label>\\n\\t\\t\\t\\t</ion-segment-button>\\n\\t\\t\\t\\t<ion-segment-button value=\\\"M\\\">\\n\\t\\t\\t\\t\\t<ion-label>M</ion-label>\\n\\t\\t\\t\\t</ion-segment-button>\\n\\t\\t\\t\\t<ion-segment-button value=\\\"Y\\\">\\n\\t\\t\\t\\t\\t<ion-label>Y</ion-label>\\n\\t\\t\\t\\t</ion-segment-button>\\n\\t\\t\\t</ion-segment>\\n\\t\\t</ion-card-header>\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<div *ngIf=\\\"segment == 'D'\\\">\\n\\t\\t\\t\\t<canvas #canvasDay></canvas>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"segment == 'W'\\\">\\n\\t\\t\\t\\t<canvas #canvasWeek></canvas>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"segment == 'M'\\\">\\n\\t\\t\\t\\t<canvas #canvasMonth></canvas>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"segment == 'Y'\\\">\\n\\t\\t\\t\\t<canvas #canvasYear></canvas>\\n\\t\\t\\t</div>\\n\\t\\t</ion-card-content>\\n\\t\\t<ion-list mode=\\\"ios\\\">\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold\\\">Total usage</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\">3.3<span class=\\\"text-small\\\">kWh</span></h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold\\\">Total est. cost</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"text-small\\\">~</span>\\n\\t\\t\\t\\t\\t\\t0.4<span class=\\\"text-small\\\">sen</span>\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold\\\">Times on</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\">\\n\\t\\t\\t\\t\\t\\t180<span class=\\\"text-small\\\">x</span>\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold\\\">Total time on</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\">\\n\\t\\t\\t\\t\\t\\t3<span class=\\\"text-small\\\">h</span>\\n\\t\\t\\t\\t\\t\\t37<span class=\\\"text-small\\\">m</span>\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t</ion-list>\\n\\t</ion-card>\\n\\n\\t<ion-card mode=\\\"ios\\\">\\n\\t\\t<ion-card-header>\\n\\t\\t\\t<h5 class=\\\"ion-no-margin\\\" style=\\\"color: #000;\\\">\\n\\t\\t\\t\\tStats\\n\\t\\t\\t</h5>\\n\\t\\t</ion-card-header>\\n\\t\\t<ion-list mode=\\\"ios\\\">\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold \\\">Est. cost/year</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\"><span class=\\\"text-small\\\">~RM</span>45</h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label slot=\\\"start\\\">\\n\\t\\t\\t\\t\\t<p class=\\\"text-bold\\\">Avg. % of usage</p>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t\\t<ion-label slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t<h3 class=\\\"ion-text-end text-bold\\\">0.4<span class=\\\"text-small\\\">%</span></h3>\\n\\t\\t\\t\\t</ion-label>\\n\\t\\t\\t</ion-item>\\n\\t\\t</ion-list>\\n\\t</ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ApplianceDetailPage } from './appliance-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApplianceDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ApplianceDetailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApplianceDetailPageRoutingModule } from './appliance-detail-routing.module';\n\nimport { ApplianceDetailPage } from './appliance-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ApplianceDetailPageRoutingModule\n  ],\n  declarations: [ApplianceDetailPage]\n})\nexport class ApplianceDetailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvYXBwbGlhbmNlLWRldGFpbC9hcHBsaWFuY2UtZGV0YWlsLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Chart } from \"chart.js\";\nimport { AppliancesService } from 'src/app/shared/services/appliances/appliances.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DevicesService } from 'src/app/shared/services/devices/devices.service';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-appliance-detail',\n  templateUrl: './appliance-detail.page.html',\n  styleUrls: ['./appliance-detail.page.scss'],\n})\nexport class ApplianceDetailPage implements OnInit {\n\n  // Data\n  appliance\n  applianceName: string = 'Lamp'\n  \n  // Segment\n  segment: string\n\n  // Chart.js\n  @ViewChild('canvasDay', {static: false}) canvasDay: ElementRef\n  @ViewChild('canvasWeek', {static: false}) canvasWeek: ElementRef\n  @ViewChild('canvasMonth', {static: false}) canvasMonth: ElementRef\n  @ViewChild('canvasYear', {static: false}) canvasYear: ElementRef\n\n  private chartDay\n  private chartWeek\n  private chartMonth\n  private chartYear\n\n  // Interval\n  public intervalCSV\n\n  // Icon\n  iconError = 'assets/img/default/404-error.svg'\n  iconAirCond = 'assets/img/appliance/air-conditioner.svg'\n  iconDishwasher = 'assets/img/appliance/dishwasher.svg'\n  iconFridge = 'assets/img/appliance/fridge.svg'\n  iconLamp = 'assets/img/appliance/lamp.svg'\n  iconLamp1 = 'assets/img/appliance/lamp-1.svg'\n  iconLCD = 'assets/img/appliance/lcd.svg'\n  iconMicrowave = 'assets/img/appliance/microwave.svg'\n  iconToaster = 'assets/img/appliance/toaster.svg'\n  iconDryer = 'assets/img/appliance/tumble-dryer.svg'\n  iconAir = 'assets/img/appliance/air.svg'\n  iconBlender = 'assets/img/appliance/blender.svg'\n  iconDeep = 'assets/img/appliance/deep.svg'\n  iconInduction = 'assets/img/appliance/induction.svg'\n  iconIron = 'assets/img/appliance/iron.svg'\n  iconVacuum = 'assets/img/appliance/vacuum.svg'\n\n\n  constructor(\n    private applianceService: AppliancesService,\n    private deviceService: DevicesService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { \n    this.getData()\n    this.activatedRoute.queryParams.subscribe(\n      (params) => {\n        if (params && params.special) {\n          this.appliance = JSON.parse(params.special)\n          // console.log(this.appliance)\n        }\n      }\n    )\n  }\n\n  ngOnInit() {\n    this.segment = 'D'\n    // this.intervalCSV = setInterval(\n    //   () => {\n    //     this.getCSV()\n    //   },\n    //   3000\n    // )\n  }\n\n  ionViewDidEnter() {\n    this.initChartDay()\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalCSV)\n  }\n\n  getData() {\n\n  }\n\n  navigatePage(path: string) {\n    let navigationPath = '/' + path\n    this.router.navigate([navigationPath])\n  }\n\n  segmentChanged(ev: string) {\n    console.log(ev)\n    if (this.segment == 'D') {\n      setTimeout(\n        () => {\n          this.initChartDay()\n        }, 1000\n      )\n    }\n    else if (this.segment == 'W') {\n      setTimeout(\n        () => {\n          this.initChartWeek()\n        }, 1000\n      )\n    }\n    else if (this.segment == 'M') {\n      setTimeout(\n        () => {\n          this.initChartMonth()\n        }, 1000\n      )\n    }\n    else if (this.segment == 'Y') {\n      setTimeout(\n        () => {\n          this.initChartYear()\n        }, 1000\n      )\n    }\n  }\n\n  initChartDay() {\n    this.chartDay = new Chart(this.canvasDay.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n  }\n\n  initChartWeek() {\n    this.chartWeek = new Chart(this.canvasWeek.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n  }\n\n  initChartMonth() {\n    this.chartMonth = new Chart(this.canvasMonth.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\", \"Week 5\"],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n  }\n\n  initChartYear() {\n    this.chartYear = new Chart(this.canvasYear.nativeElement, {\n      type: \"line\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [\n          {\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40],\n            spanGaps: false\n          }\n        ]\n      }\n    });\n  }\n\n  getCSV() {\n    this.chartDay.data.labels = []\n    this.chartDay.data.datasets.data = []\n\n    this.deviceService.getValue().subscribe(\n      (res: any[]) => {\n        res.forEach(\n          (data) => {\n            if (this.appliance.type == 'Fridge' && data.label == 'Fridge') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'AC' || data.label == 'AC') {\n              console.log('tes')\n              console.log(this.appliance.type)\n              console.log(data.label)\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Dryer' && data.label == 'Dryer') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Washing' && data.label == 'Washing') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Microwave' && data.label == 'Microwave') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Air' && data.label == 'Air') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Deep' && data.label == 'Deep') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Blender' && data.label == 'Blender') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Induction' && data.label == 'Induction') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Iron' && data.label == 'Iron') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n            else if (this.appliance.type == 'Vacuum' && data.label == 'Vacuum') {\n              let powerValue = Number(data.power)*240/1000\n              let newTime = moment.unix(data.time).format('h:mm:ss a')\n              this.chartDay.data.labels.push(newTime)\n              this.chartDay.data.datasets[0].data.push(powerValue)\n              this.chartDay.update()\n            }\n          }\n        )\n      }\n    )\n  }\n\n}\n"]}