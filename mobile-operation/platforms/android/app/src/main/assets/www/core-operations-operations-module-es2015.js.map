{"version":3,"sources":["./src/app/core/operations/operations.page.html","./src/app/core/operations/operations-routing.module.ts","./src/app/core/operations/operations.module.ts","./src/app/core/operations/operations.page.scss","./src/app/core/operations/operations.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,u7BAAw3B,WAAW,sBAAsB,YAAY,kTAAkT,E;;;;;;;;;;;;;;;;;;;ACA7rC;AACc;AAEJ;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE6B;AAEvB;AAWnD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,sFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,+DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;ACnBjC;AAAe,6EAAc,qBAAqB,GAAG,0BAA0B,oBAAoB,GAAG,6CAA6C,mrBAAmrB,E;;;;;;;;;;;;;;;;;;ACApxB;AACkB;AAOpE,IAAa,cAAc,GAA3B,MAAa,cAAc;IAezB,YACU,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAd1B,OAAO;QACP,iBAAY,GAAU,EAAE;QAKxB,UAAU;QACV,YAAO,GAAY,IAAI;QACvB,gBAAW,GAAY,KAAK;QAE5B,OAAO;QACP,cAAS,GAAG,yBAAyB;IAIjC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,QAA0B,EAAE,EAAE;gBAC1D,IAAI,CAAC,YAAY,GAAG,QAAQ;gBAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK;oBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAChC;YACH,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,OAAO,CAAC,kBAAkB;QACxB,IAAI,IAAI,GAAG,kBAAkB;QAC7B,IAAI,QAAQ,GAAG,EAAE;QACjB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAE,GAAG,EAAE;YACzD,gDAAgD;YAChD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC1B,CAAC,CAAC,CAAC,KAAK,CAAE,GAAG,EAAE;YACX,uCAAuC;YACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA3BoB,iEAAO;;AAhBf,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,qOAAqC;;KAEtC,CAAC;GACW,cAAc,CA2C1B;AA3C0B","file":"core-operations-operations-module-es2015.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>Operations</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <div *ngIf=\\\"isSearching\\\">\\n    <ion-spinner name=\\\"crescent\\\" color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n  \\n  <div *ngIf=\\\"!isSearching\\\">\\n    <div *ngIf=\\\"isEmpty\\\" class=\\\"empty-list ion-text-center\\\">\\n      <img [src]=\\\"iconEmpty\\\" class=\\\"empty-img\\\">\\n      <p>No wifi detected in your area</p>\\n    </div>\\n  \\n    <ion-list *ngIf=\\\"!isEmpty\\\" class=\\\"list-core\\\">\\n      <ion-list-header>\\n        <h3>Find WiFi to connect</h3>\\n      </ion-list-header>\\n      <ion-item lines=\\\"none\\\" class=\\\"item-core\\\" *ngFor=\\\"let wifi of scannedWifis\\\">\\n        <ion-icon name=\\\"wifi-outline\\\" slot=\\\"start\\\" color=\\\"primary\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">\\n          <h3>{{wifi.SSID}}</h3>\\n          <p>{{wifi.BSSID}}</p>\\n        </ion-label>\\n        <ion-button\\n          slot=\\\"end\\\"\\n          color=\\\"primary\\\"\\n          shape=\\\"round\\\"\\n          mode=\\\"ios\\\"\\n          (click)=\\\"connect(wifi)\\\"\\n        >\\n          Connect\\n        </ion-button>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperationsPage } from './operations.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OperationsPageRoutingModule } from './operations-routing.module';\n\nimport { OperationsPage } from './operations.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OperationsPageRoutingModule\n  ],\n  declarations: [OperationsPage]\n})\nexport class OperationsPageModule {}\n","export default \".empty-list {\\n  margin-top: 3rem;\\n}\\n.empty-list .empty-img {\\n  max-width: 5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWFmaXFiYXNyaS9EZXZlbG9wbWVudC9Ta3Vuay9za3Vuay0wMDItemV1cy9tb2JpbGUtb3BlcmF0aW9uL3NyYy9hcHAvY29yZS9vcGVyYXRpb25zL29wZXJhdGlvbnMucGFnZS5zY3NzIiwic3JjL2FwcC9jb3JlL29wZXJhdGlvbnMvb3BlcmF0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKO0FEQUk7RUFDSSxlQUFBO0FDRVIiLCJmaWxlIjoic3JjL2FwcC9jb3JlL29wZXJhdGlvbnMvb3BlcmF0aW9ucy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZW1wdHktbGlzdCB7XG4gICAgbWFyZ2luLXRvcDogM3JlbTtcbiAgICAuZW1wdHktaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1cmVtO1xuICAgIH1cbn0iLCIuZW1wdHktbGlzdCB7XG4gIG1hcmdpbi10b3A6IDNyZW07XG59XG4uZW1wdHktbGlzdCAuZW1wdHktaW1nIHtcbiAgbWF4LXdpZHRoOiA1cmVtO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Hotspot, HotspotNetwork } from '@ionic-native/hotspot/ngx';\n\n@Component({\n  selector: 'app-operations',\n  templateUrl: './operations.page.html',\n  styleUrls: ['./operations.page.scss'],\n})\nexport class OperationsPage implements OnInit {\n\n  // Data\n  scannedWifis: any[] = []\n  \n  // Loader\n  wifiLoader: any\n\n  // Checker\n  isEmpty: boolean = true\n  isSearching: boolean = false\n\n  // Icon\n  iconEmpty = 'assets/icon/no-wifi.svg'\n\n  constructor(\n    private hotspot: Hotspot\n  ) { }\n\n  ngOnInit() {\n    this.wifiLoader = setInterval(() => {\n      this.hotspot.scanWifi().then((networks: HotspotNetwork[]) => {\n        this.scannedWifis = networks\n        if (this.scannedWifis) {\n          this.isEmpty = false\n          console.log(this.scannedWifis);\n        }\n      })\n    }, 5000)\n  }\n\n  connect(selectedConnection) {\n    let ssid = selectedConnection\n    let password = ''\n    this.hotspot.connectToWifi(ssid.SSID, password).then( () => {\n      //connection to the WiFi network was successfull\n      console.log('Connected')\n    }).catch( () => {\n        //connection to the WiFi network failed\n        console.log('Error')\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}